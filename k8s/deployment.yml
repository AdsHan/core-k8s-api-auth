---
---
# REDIS
---
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-redis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: container-pod-redis 
  template:
    metadata:
      labels:
        app: container-pod-redis
    spec:
      containers:
      - name: redis
        image: redis:6.2.5
        ports:
        - containerPort: 6379   
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: service-redis
spec:
  selector:
    app: container-pod-redis
  ports:
  - port: 6379
  type: ClusterIP
---
---
# API AUTH
---
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-api-auth
spec:
  replicas: 3
  selector:
    matchLabels:
      app: container-pod-api  
  template:
    metadata:
      labels:
        app: container-pod-api
    spec:
      containers:
      - name: api-auth
        image: andersonhansen/api-auth:latest
        ports:        
        - containerPort: 80
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: service-api-auth
spec:
  # Quando eu chamar esse service será visto quais os PODs que tem esse selector. Para estes será enviado/balanceado o tráfego
  selector:
    app: container-pod-api
  ports:
  - port: 3008
    targetPort: 80
    nodePort: 30000
  type: LoadBalancer
  #- port: 3008
  #  targetPort: 80
  #type: ClusterIP
